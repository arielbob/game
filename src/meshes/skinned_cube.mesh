is_skinned 1

14
12

;; vertices

v -0.5000000000000000 -0.5000000000000000 -0.5000000000000000
n -0.5773503184318542 -0.5773503184318542 -0.5773503184318542
uv 0.3750000000000000 0.0000000000000000
bi 0 0 0 0
bw 1 0 0 0

v -0.5000000000000000 0.5000000000000000 -0.5000000000000000
n -0.5773503184318542 0.5773503184318542 -0.5773503184318542
uv 0.6250000000000000 0.0000000000000000
bi 1 0 0 0
bw 1 0 0 0

v -0.5000000000000000 -0.5000000000000000 0.5000000000000000
n -0.5773503184318542 -0.5773503184318542 0.5773503184318542
uv 0.3750000000000000 0.2500000000000000
bi 0 0 0 0
bw 1 0 0 0

v -0.5000000000000000 0.5000000000000000 0.5000000000000000
n -0.5773503184318542 0.5773503184318542 0.5773503184318542
uv 0.6250000000000000 0.2500000000000000
bi 1 0 0 0
bw 1 0 0 0

v 0.5000000000000000 -0.5000000000000000 -0.5000000000000000
n 0.5773503184318542 -0.5773503184318542 -0.5773503184318542
uv 0.3750000000000000 0.7500000000000000
bi 0 0 0 0
bw 1 0 0 0

v 0.5000000000000000 0.5000000000000000 -0.5000000000000000
n 0.5773503184318542 0.5773503184318542 -0.5773503184318542
uv 0.6250000000000000 0.7500000000000000
bi 1 0 0 0
bw 1 0 0 0

v 0.5000000000000000 -0.5000000000000000 0.5000000000000000
n 0.5773503184318542 -0.5773503184318542 0.5773503184318542
uv 0.3750000000000000 0.5000000000000000
bi 0 0 0 0
bw 1 0 0 0

v 0.5000000000000000 0.5000000000000000 0.5000000000000000
n 0.5773503184318542 0.5773503184318542 0.5773503184318542
uv 0.6250000000000000 0.5000000000000000
bi 1 0 0 0
bw 1 0 0 0

v -0.5000000000000000 -0.5000000000000000 -0.5000000000000000
n -0.5773503184318542 -0.5773503184318542 -0.5773503184318542
uv 0.3750000000000000 1.0000000000000000
bi 0 0 0 0
bw 1 0 0 0

v -0.5000000000000000 -0.5000000000000000 -0.5000000000000000
n -0.5773503184318542 -0.5773503184318542 -0.5773503184318542
uv 0.1250000000000000 0.7500000000000000
bi 0 0 0 0
bw 1 0 0 0

v -0.5000000000000000 -0.5000000000000000 0.5000000000000000
n -0.5773503184318542 -0.5773503184318542 0.5773503184318542
uv 0.1250000000000000 0.5000000000000000
bi 0 0 0 0
bw 1 0 0 0

v -0.5000000000000000 0.5000000000000000 0.5000000000000000
n -0.5773503184318542 0.5773503184318542 0.5773503184318542
uv 0.8750000000000000 0.5000000000000000
bi 1 0 0 0
bw 1 0 0 0

v -0.5000000000000000 0.5000000000000000 -0.5000000000000000
n -0.5773503184318542 0.5773503184318542 -0.5773503184318542
uv 0.6250000000000000 1.0000000000000000
bi 1 0 0 0
bw 1 0 0 0

v -0.5000000000000000 0.5000000000000000 -0.5000000000000000
n -0.5773503184318542 0.5773503184318542 -0.5773503184318542
uv 0.8750000000000000 0.7500000000000000
bi 1 0 0 0
bw 1 0 0 0

;; indices

0 2 1
2 6 3
6 4 7
4 8 5
10 9 6
7 5 11
2 3 1
6 7 3
4 5 7
8 12 5
9 4 6
5 13 11

;; it's possible to use animations that weren't made for a mesh, as long as both
;; the animation and the mesh have the same amount of bones.
;; although, unless the skeletons are very similar, you will probably end up with
;; weird results.

;; this is an array; bone indices are in order that they appear in this structure.
;; i don't think it matters if a bone lists a bone that comes after it as a parent.
;; as long as it eventually exists.
skeleton {
    num_bones 2

    bone "root" {
        ;; inverse_bind is the transform needed to get from world space to
        ;; bone space. i.e. the inverse of the transform that makes the bone go
        ;; from 0 to its position in bind-space.

        ;; inverse_bind matrix is 3x4 (3 rows, 4 columns)
        ;; the order here is from top to bottom, left to right
        inverse_bind 1.0 0.0 0.0 0.0
                     0.0 1.0 0.0 0.5
                     0.0 0.0 1.0 0.0
    }

    bone "child1" {
        inverse_bind 1.0 0.0 0.0 0.0
                     0.0 1.0 0.0 0.0
                     0.0 0.0 1.0 0.0
        parent 0
    }
}